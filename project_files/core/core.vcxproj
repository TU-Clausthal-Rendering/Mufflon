<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\deps\chinoise\src\chinoise.cpp" />
    <ClCompile Include="..\..\deps\chinoise\src\fieldnoise.cpp" />
    <ClCompile Include="..\..\deps\chinoise\src\rnd.cpp" />
    <ClCompile Include="..\..\deps\epsilon\src\2dintersection.cpp" />
    <ClCompile Include="..\..\deps\epsilon\src\3dfunctions.cpp" />
    <ClCompile Include="..\..\deps\epsilon\src\3dintersection.cpp" />
    <ClCompile Include="..\..\deps\epsilon\src\3dtypes.cpp" />
    <ClCompile Include="..\..\src\core\scene\attribute.cpp" />
    <ClCompile Include="..\..\src\core\scene\geometry\polygon.cpp" />
    <ClCompile Include="..\..\src\core\scene\geometry\sphere.cpp" />
    <ClCompile Include="..\..\src\core\scene\materials\lambert.cpp" />
    <ClCompile Include="..\..\src\core\scene\materials\material.cpp" />
    <ClCompile Include="..\..\src\core\scene\object.cpp" />
    <ClCompile Include="..\..\src\core\scene\scene.cpp" />
    <ClCompile Include="..\..\src\core\scene\textures\cputexture.cpp" />
    <ClCompile Include="..\..\src\core\scene\textures\texture.cpp" />
    <ClCompile Include="..\..\src\util\log.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\deps\chinoise\include\cn\chinoise.hpp" />
    <ClInclude Include="..\..\deps\chinoise\include\cn\fieldnoise.hpp" />
    <ClInclude Include="..\..\deps\chinoise\include\cn\rnd.hpp" />
    <ClInclude Include="..\..\deps\chinoise\include\cn\sampler.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\2dintersection.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\2dtypes.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\3dintersection.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\3dtypes.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\configure.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\defaultconfig.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\elementarytypes.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\prime.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\stdextensions.hpp" />
    <ClInclude Include="..\..\deps\epsilon\include\ei\vector.hpp" />
    <ClInclude Include="..\..\src\core\cuda\error.hpp" />
    <ClInclude Include="..\..\src\core\cuda\memory.hpp" />
    <ClInclude Include="..\..\src\core\math\sampling.hpp" />
    <ClInclude Include="..\..\src\core\scene\accel_struct.hpp" />
    <ClInclude Include="..\..\src\core\scene\accessor.hpp" />
    <ClInclude Include="..\..\src\core\scene\allocator.hpp" />
    <ClInclude Include="..\..\src\core\scene\attribute.hpp" />
    <ClInclude Include="..\..\src\core\scene\attribute_list.hpp" />
    <ClInclude Include="..\..\src\core\scene\geometry\polygon.hpp" />
    <ClInclude Include="..\..\src\core\scene\geometry\sphere.hpp" />
    <ClInclude Include="..\..\src\core\scene\instance.hpp" />
    <ClInclude Include="..\..\src\core\scene\materials\lambert.hpp" />
    <ClInclude Include="..\..\src\core\scene\materials\material.hpp" />
    <ClInclude Include="..\..\src\core\scene\materials\medium.hpp" />
    <ClInclude Include="..\..\src\core\scene\materials\sample.hpp" />
    <ClInclude Include="..\..\src\core\scene\materials\types.hpp" />
    <ClInclude Include="..\..\src\core\scene\object.hpp" />
    <ClInclude Include="..\..\src\core\scene\residency.hpp" />
    <ClInclude Include="..\..\src\core\scene\scene.hpp" />
    <ClInclude Include="..\..\src\core\scene\textures\cputexture.hpp" />
    <ClInclude Include="..\..\src\core\scene\textures\cubemap.hpp" />
    <ClInclude Include="..\..\src\core\scene\textures\texture.hpp" />
    <ClInclude Include="..\..\src\core\scene\types.hpp" />
    <ClInclude Include="..\..\src\export\dll_export.hpp" />
    <ClInclude Include="..\..\src\util\assert.hpp" />
    <ClInclude Include="..\..\src\util\flag.hpp" />
    <ClInclude Include="..\..\src\util\array_wrapper.hpp" />
    <ClInclude Include="..\..\src\util\log.hpp" />
    <ClInclude Include="..\..\src\util\punning.hpp" />
    <ClInclude Include="..\..\src\util\tagged_tuple.hpp" />
    <ClInclude Include="..\..\src\util\types.hpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{15E94C26-7D49-421A-8CE4-7D697349FB79}</ProjectGuid>
    <RootNamespace>core</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
    <ProjectName>core</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.0.props" />
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)build\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build\temp\$(ProjectName)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)build\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)build\temp\$(ProjectName)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)external\OpenMesh-7.1\Debug\include;$(CudaToolkitIncludeDir);$(SolutionDir)src;$(SolutionDir)\deps\epsilon\include;$(SolutionDir)deps\chinoise\include;$(SolutionDir)deps\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NOMINMAX;_USE_MATH_DEFINES;LIBRARY_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <PostBuildEvent>
      <Command>xcopy /D "$(CudaToolkitBinDir)\cudart64_*.dll" "$(OutDir)"
xcopy /D "$(SolutionDir)external\OpenMesh-7.1\$(Configuration)\bin\OpenMeshCored.dll" "$(OutDir)"
xcopy /D "$(SolutionDir)external\OpenMesh-7.1\$(Configuration)\bin\OpenMeshToolsd.dll" "$(OutDir)"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copies the necessary .dll's into the execution directory</Message>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>cudart.lib;OpenMeshCored.lib;OpenMeshToolsd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)external\OpenMesh-7.1\Debug\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile>
      <Include>
      </Include>
      <GenerateRelocatableDeviceCode>false</GenerateRelocatableDeviceCode>
      <KeepDir>$(SolutionDir)build\temp\$(ProjectName)\$(Configuration)\</KeepDir>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <CompileOut>$(SolutionDir)build\temp\$(ProjectName)\$(Configuration)\</CompileOut>
    </CudaCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)external\OpenMesh-7.1\Release\include;$(CudaToolkitIncludeDir);$(SolutionDir)src;$(SolutionDir)\deps\epsilon\include;$(SolutionDir)deps\chinoise\include;$(SolutionDir)deps\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NOMINMAX;_USE_MATH_DEFINES;LIBRARY_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>cudart.lib;OpenMeshCore.lib;OpenMeshTools.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)external\OpenMesh-7.1\Release\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <Include>
      </Include>
      <HostDebugInfo>true</HostDebugInfo>
      <GenerateRelocatableDeviceCode>false</GenerateRelocatableDeviceCode>
      <KeepDir>$(SolutionDir)build\temp\$(ProjectName)\$(Configuration)\</KeepDir>
      <CompileOut>$(SolutionDir)build\temp\$(ProjectName)\$(Configuration)\</CompileOut>
    </CudaCompile>
    <PostBuildEvent>
      <Message>Copies the necessary .dll's into the execution directory</Message>
      <Command>xcopy /D "$(CudaToolkitBinDir)\cudart64_*.dll" "$(OutDir)"
xcopy /D "$(SolutionDir)external\OpenMesh-7.1\$(Configuration)\bin\OpenMeshCore.dll" "$(OutDir)"
xcopy /D "$(SolutionDir)external\OpenMesh-7.1\$(Configuration)\bin\OpenMeshTools.dll" "$(OutDir)"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 10.0.targets" />
  </ImportGroup>
</Project>