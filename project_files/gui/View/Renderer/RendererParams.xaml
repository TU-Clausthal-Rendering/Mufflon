<UserControl x:Class="gui.View.Renderer.RendererParams"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:gui.View.Renderer"
             xmlns:viewmodel="clr-namespace:gui.ViewModel"
             xmlns:helper="clr-namespace:gui.View.Helper"
             mc:Ignorable="d" 
             d:DesignHeight="200" 
             d:DesignWidth="200">
    <DataGrid Name="RendererPropertiesGrid"
              ItemsSource="{Binding Renderer.RendererProperties, UpdateSourceTrigger=PropertyChanged}"
              AutoGenerateColumns="False"
              CanUserAddRows="False"
              CanUserDeleteRows="False"
              CanUserReorderColumns="False"
              CanUserResizeColumns="True"
              CanUserResizeRows="False"
              CanUserSortColumns="False"
              RowHeaderWidth="0"
              Width="Auto">
        <DataGrid.Resources>
            <Style x:Key="{x:Type DataGridCell}"
                    TargetType="{x:Type DataGridCell}">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Foreground"
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="Foreground"
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Foreground"
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="Foreground"
                                Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <DataTemplate x:Key="BoolTemplate"
                          DataType="{x:Type viewmodel:RendererPropertyBool}">
                <CheckBox HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          IsChecked="{Binding Value, UpdateSourceTrigger=PropertyChanged}"/>
            </DataTemplate>
            <DataTemplate x:Key="IntTemplate"
                          DataType="{x:Type viewmodel:RendererPropertyInt}">
                <helper:EnterTextBox Text="{Binding Value, UpdateSourceTrigger=LostFocus}"
                                     HorizontalContentAlignment="Right"
                                     VerticalContentAlignment="Center"/>
            </DataTemplate>
            <!--<viewmodel:FloatConverter x:Key="FloatConverterKey"/>
            Then ', Converter={StaticResource FloatConverterKey}' behind UpdateSourceTrigger
            -->
            <DataTemplate x:Key="FloatTemplate"
                          DataType="{x:Type viewmodel:RendererPropertyFloat}">
                    <helper:EnterTextBox Text="{Binding Value, UpdateSourceTrigger=LostFocus}"
                                     HorizontalContentAlignment="Right"
                                     VerticalContentAlignment="Center"/>
            </DataTemplate>
            <local:ColumnTemplateSelector x:Key="ColumnTemplateSelector"
                                          BoolTemplate="{StaticResource BoolTemplate}"
                                          IntTemplate="{StaticResource IntTemplate}"
                                          FloatTemplate="{StaticResource FloatTemplate}"/>
        </DataGrid.Resources>
        <DataGrid.Columns>
            <DataGridTextColumn Header="Parameter"
                                Binding="{Binding Name}"
                                Width="*"
                                IsReadOnly="True">
                <DataGridTextColumn.ElementStyle>
                    <Style TargetType="{x:Type TextBlock}"
                           BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </DataGridTextColumn.ElementStyle>
            </DataGridTextColumn>
            <DataGridTemplateColumn Header="Value"
                                    Width="*"
                                    CellTemplateSelector="{StaticResource ColumnTemplateSelector}"/>
        </DataGrid.Columns>
    </DataGrid>
</UserControl>
