<UserControl x:Class="gui.View.Camera.CameraView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:gui.View.Camera"
             xmlns:main="clr-namespace:gui"
             xmlns:helper="clr-namespace:gui.View.Helper"
             mc:Ignorable="d" 
             d:DesignHeight="200" 
             d:DesignWidth="160"
             SizeChanged="OnSizeChanged">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <main:InvBooleanToVisibilityConverter x:Key="InvBooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <GroupBox>
        <GroupBox.Header>
            <Grid x:Name="GroupHeaderGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <RadioButton
                    Grid.Column="0"
                    GroupName="RadioCamera"
                    Margin="{StaticResource LeftPropertyMargin}"
                    IsChecked="{Binding IsSelected}"/>

                <TextBlock 
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    Text="{Binding Name, FallbackValue=Name}"/>

                <Image Grid.Column="2"
                       Margin="{StaticResource LeftPropertyMargin}"
                       Source="../../Icons/animated.png"
                       Width="16"
                       Height="16"
                       ToolTip="This camera has an animated path"
                       Visibility="{Binding IsAnimated, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Image Grid.Column="2"
                       Margin="{StaticResource LeftPropertyMargin}"
                       Source="../../Icons/not-animated.png"
                       Width="16"
                       Height="16"
                       ToolTip="This camera does not have an animated path"
                       Visibility="{Binding IsAnimated, Converter={StaticResource InvBooleanToVisibilityConverter}}"/>
                <Button
                    Grid.Column="3"
                    Margin="{StaticResource RightPropertyMargin}"
                    Command="{Binding ResetTransRotCommand}">
                  <Image
                      Source="../../Icons/restart.png"
                      Width="16"
                      Height="16"/>
                </Button>
            </Grid>
        </GroupBox.Header>
        <StackPanel x:Name="GroupItems">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock 
                        Grid.Column="0"
                        Grid.Row="0"
                        Text="Type:"
                        Margin="{StaticResource LeftPropertyMargin}"/>
                <TextBlock
                        Grid.Column="1"
                        Grid.Row="0"
                        Text="{Binding Type}"
                        Margin="{StaticResource RightPropertyMargin}"/>

                <TextBlock
                        Grid.Column="0"
                        Grid.Row="1"
                        Text="Position:"
                        Margin="{StaticResource LeftPropertyMargin}"/>
                <!-- Position Grid -->
                <Grid
                        Grid.Column="1"
                        Grid.Row="1"
                        Margin="{StaticResource RightPropertyMargin}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock
                          Grid.Column="0"
                          Text="{Binding PositionX, StringFormat={}{0:0.###}, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock
                          Grid.Column="1"
                          Text="{Binding PositionY, StringFormat={}{0:0.###}, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock
                          Grid.Column="2"
                          Text="{Binding PositionZ, StringFormat={}{0:0.###}, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>

                <TextBlock
                        Grid.Column="0"
                        Grid.Row="2"
                        Text="Direction:"
                        Margin="{StaticResource LeftPropertyMargin}"/>
                <!-- Direction Grid -->
                <Grid
                        Grid.Column="1"
                        Grid.Row="2"
                        Margin="{StaticResource RightPropertyMargin}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock
                          Grid.Column="0"
                          Text="{Binding DirectionX, StringFormat={}{0:0.###}, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock
                          Grid.Column="1"
                          Text="{Binding DirectionY, StringFormat={}{0:0.###}, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock
                          Grid.Column="2"
                          Text="{Binding DirectionZ, StringFormat={}{0:0.###}, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </Grid>
        </StackPanel>
    </GroupBox>
</UserControl>
